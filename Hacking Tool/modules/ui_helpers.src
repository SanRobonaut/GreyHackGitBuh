string.bold = function()
    return "<b>" + self + "</b>"
end function

string.italic = function()
    return "<i>" + self + "</i>"
end function

string.underline = function()
    return "<u>" + self + "</u>"
end function

string.strikethrough = function()
    return "<s>" + self + "</s>"
end function

string.color = function(color)
    return "<color=" + color + ">" + self + "</color>"
end function

string.align = function(align)
    return "<align=" + align + ">" + self + "</align>"
end function

string.mark = function(color)
    return "<mark=" + color + ">" + self + "</mark>"
end function

string.voffset = function(offset)
    return "<voffset=" + offset + "em>" + self + "</voffset>"
end function

string.cspace = function(spacing)
    return "<cspace=" + spacing + "em>" + self + "</cspace>"
end function

string.rotate = function(rotation)
    return "<rotate=" + rotation + ">" + self + "</rotate>"
end function

string.pos = function(pos)
    return "<pos=" + pos + ">" + self + "</pos>"
end function

string.size = function(size)
    return "<size=" + size + ">" + self + "</size>"
end function

string.altfont=function()
    return "<font=""LiberationSans SDF"">"+self+"</font>"
end function

string.sub=function()
    return "<sub>"+self+"</sub>"
end function

string.sup=function()
    return "<sup>"+self+"</sup>"
end function

number.remainder = function()
    return self % 1
end function

number.whole = function()
    return self - self.remainder
end function

rgb_to_hex = function(r, g, b)
    chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"]
    hex = "#"
    
    hex = hex + chars[(r / 16).whole] + chars[(r / 16).remainder * 16]
    hex = hex + chars[(g / 16).whole] + chars[(g / 16).remainder * 16]
    hex = hex + chars[(b / 16).whole] + chars[(b / 16).remainder * 16]

    return hex
end function

rgba_to_hex = function(r, g, b, a)
    chars = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"]
    hex = "#"
    
    hex = hex + chars[(r / 16).whole] + chars[(r / 16).remainder * 16]
    hex = hex + chars[(g / 16).whole] + chars[(g / 16).remainder * 16]
    hex = hex + chars[(b / 16).whole] + chars[(b / 16).remainder * 16]
    hex = hex + chars[(a / 16).whole] + chars[(a / 16).remainder * 16]

    return hex
end function

select_from_list = function(items, starting_index = 0, display_func, instruction_text = "<b>LeftShift/Delete</b> to select, <b>W/Up</b> to move cursor up, <b>S/Down</b> to move cursor down")
    if display_func == null then 
        display_func = function(x) 
            return str(x) 
        end function
    end if

    current_index = starting_index

    while true
        print(instruction_text, true)
        for i in range(0, items.len - 1)
            txt = display_func(items[i])
            if current_index == i then txt = txt.mark(rgba_to_hex(255, 255, 255, 0.1 * 255)).bold()
            print(txt)
        end for

        key = user_input("", false, true)
        if key == "UpArrow" or key == "w" then current_index = current_index - 1
        if key == "DownArrow" or key == "s" then current_index = current_index + 1
        if key == "LeftShift" or key == "Delete" then return items[current_index]

        if current_index == items.len then current_index = 0
        if current_index <= -1 then current_index = items.len - 1
    end while
end function